SET_TO(BASS_Apply3D				   , aml->GetSym(pBASSHandle, "BASS_Apply3D"));
SET_TO(BASS_ChannelBytes2Seconds   , aml->GetSym(pBASSHandle, "BASS_ChannelBytes2Seconds"));
SET_TO(BASS_ChannelFlags           , aml->GetSym(pBASSHandle, "BASS_ChannelFlags"));
SET_TO(BASS_ChannelFree            , aml->GetSym(pBASSHandle, "BASS_ChannelFree"));
SET_TO(BASS_ChannelGet3DAttributes , aml->GetSym(pBASSHandle, "BASS_ChannelGet3DAttributes"));
SET_TO(BASS_ChannelGet3DPosition   , aml->GetSym(pBASSHandle, "BASS_ChannelGet3DPosition"));
SET_TO(BASS_ChannelGetAttribute    , aml->GetSym(pBASSHandle, "BASS_ChannelGetAttribute"));
SET_TO(BASS_ChannelGetAttributeEx  , aml->GetSym(pBASSHandle, "BASS_ChannelGetAttributeEx"));
SET_TO(BASS_ChannelGetData         , aml->GetSym(pBASSHandle, "BASS_ChannelGetData"));
SET_TO(BASS_ChannelGetDevice       , aml->GetSym(pBASSHandle, "BASS_ChannelGetDevice"));
SET_TO(BASS_ChannelGetInfo         , aml->GetSym(pBASSHandle, "BASS_ChannelGetInfo"));
SET_TO(BASS_ChannelGetLength       , aml->GetSym(pBASSHandle, "BASS_ChannelGetLength"));
SET_TO(BASS_ChannelGetLevel        , aml->GetSym(pBASSHandle, "BASS_ChannelGetLevel"));
SET_TO(BASS_ChannelGetLevelEx      , aml->GetSym(pBASSHandle, "BASS_ChannelGetLevelEx"));
SET_TO(BASS_ChannelGetPosition     , aml->GetSym(pBASSHandle, "BASS_ChannelGetPosition"));
SET_TO(BASS_ChannelGetTags         , aml->GetSym(pBASSHandle, "BASS_ChannelGetTags"));
SET_TO(BASS_ChannelIsActive        , aml->GetSym(pBASSHandle, "BASS_ChannelIsActive"));
SET_TO(BASS_ChannelIsSliding       , aml->GetSym(pBASSHandle, "BASS_ChannelIsSliding"));
SET_TO(BASS_ChannelLock            , aml->GetSym(pBASSHandle, "BASS_ChannelLock"));
SET_TO(BASS_ChannelPause           , aml->GetSym(pBASSHandle, "BASS_ChannelPause"));
SET_TO(BASS_ChannelPlay            , aml->GetSym(pBASSHandle, "BASS_ChannelPlay"));
SET_TO(BASS_ChannelRemoveDSP       , aml->GetSym(pBASSHandle, "BASS_ChannelRemoveDSP"));
SET_TO(BASS_ChannelRemoveFX        , aml->GetSym(pBASSHandle, "BASS_ChannelRemoveFX"));
SET_TO(BASS_ChannelRemoveLink      , aml->GetSym(pBASSHandle, "BASS_ChannelRemoveLink"));
SET_TO(BASS_ChannelRemoveSync      , aml->GetSym(pBASSHandle, "BASS_ChannelRemoveSync"));
SET_TO(BASS_ChannelSeconds2Bytes   , aml->GetSym(pBASSHandle, "BASS_ChannelSeconds2Bytes"));
SET_TO(BASS_ChannelSet3DAttributes , aml->GetSym(pBASSHandle, "BASS_ChannelSet3DAttributes"));
SET_TO(BASS_ChannelSet3DPosition   , aml->GetSym(pBASSHandle, "BASS_ChannelSet3DPosition"));
SET_TO(BASS_ChannelSetAttribute    , aml->GetSym(pBASSHandle, "BASS_ChannelSetAttribute"));
SET_TO(BASS_ChannelSetAttributeEx  , aml->GetSym(pBASSHandle, "BASS_ChannelSetAttributeEx"));
SET_TO(BASS_ChannelSetDSP          , aml->GetSym(pBASSHandle, "BASS_ChannelSetDSP"));
SET_TO(BASS_ChannelSetDevice       , aml->GetSym(pBASSHandle, "BASS_ChannelSetDevice"));
SET_TO(BASS_ChannelSetFX           , aml->GetSym(pBASSHandle, "BASS_ChannelSetFX"));
SET_TO(BASS_ChannelSetLink         , aml->GetSym(pBASSHandle, "BASS_ChannelSetLink"));
SET_TO(BASS_ChannelSetPosition     , aml->GetSym(pBASSHandle, "BASS_ChannelSetPosition"));
SET_TO(BASS_ChannelSetSync         , aml->GetSym(pBASSHandle, "BASS_ChannelSetSync"));
SET_TO(BASS_ChannelSlideAttribute  , aml->GetSym(pBASSHandle, "BASS_ChannelSlideAttribute"));
SET_TO(BASS_ChannelStop            , aml->GetSym(pBASSHandle, "BASS_ChannelStop"));
SET_TO(BASS_ChannelUpdate          , aml->GetSym(pBASSHandle, "BASS_ChannelUpdate"));
SET_TO(BASS_ErrorGetCode           , aml->GetSym(pBASSHandle, "BASS_ErrorGetCode"));
SET_TO(BASS_FXGetParameters        , aml->GetSym(pBASSHandle, "BASS_FXGetParameters"));
SET_TO(BASS_FXReset                , aml->GetSym(pBASSHandle, "BASS_FXReset"));
SET_TO(BASS_FXSetParameters        , aml->GetSym(pBASSHandle, "BASS_FXSetParameters"));
SET_TO(BASS_FXSetPriority          , aml->GetSym(pBASSHandle, "BASS_FXSetPriority"));
SET_TO(BASS_Free                   , aml->GetSym(pBASSHandle, "BASS_Free"));
SET_TO(BASS_Get3DFactors           , aml->GetSym(pBASSHandle, "BASS_Get3DFactors"));
SET_TO(BASS_Get3DPosition          , aml->GetSym(pBASSHandle, "BASS_Get3DPosition"));
SET_TO(BASS_GetCPU                 , aml->GetSym(pBASSHandle, "BASS_GetCPU"));
SET_TO(BASS_GetConfig              , aml->GetSym(pBASSHandle, "BASS_GetConfig"));
SET_TO(BASS_GetConfigPtr           , aml->GetSym(pBASSHandle, "BASS_GetConfigPtr"));
SET_TO(BASS_GetDevice              , aml->GetSym(pBASSHandle, "BASS_GetDevice"));
SET_TO(BASS_GetDeviceInfo          , aml->GetSym(pBASSHandle, "BASS_GetDeviceInfo"));
SET_TO(BASS_GetInfo                , aml->GetSym(pBASSHandle, "BASS_GetInfo"));
SET_TO(BASS_GetVersion             , aml->GetSym(pBASSHandle, "BASS_GetVersion"));
SET_TO(BASS_GetVolume              , aml->GetSym(pBASSHandle, "BASS_GetVolume"));
SET_TO(BASS_Init                   , aml->GetSym(pBASSHandle, "BASS_Init"));
SET_TO(BASS_IsStarted              , aml->GetSym(pBASSHandle, "BASS_IsStarted"));
SET_TO(BASS_MusicFree              , aml->GetSym(pBASSHandle, "BASS_MusicFree"));
SET_TO(BASS_MusicLoad              , aml->GetSym(pBASSHandle, "BASS_MusicLoad"));
SET_TO(BASS_Pause                  , aml->GetSym(pBASSHandle, "BASS_Pause"));
/*SET_TO(BASS_RecordFree             , aml->GetSym(pBASSHandle, "BASS_RecordFree"));
SET_TO(BASS_RecordGetDevice        , aml->GetSym(pBASSHandle, "BASS_RecordGetDevice"));
SET_TO(BASS_RecordGetDeviceInfo    , aml->GetSym(pBASSHandle, "BASS_RecordGetDeviceInfo"));
SET_TO(BASS_RecordGetInfo          , aml->GetSym(pBASSHandle, "BASS_RecordGetInfo"));
SET_TO(BASS_RecordGetInput         , aml->GetSym(pBASSHandle, "BASS_RecordGetInput"));
SET_TO(BASS_RecordGetInputName     , aml->GetSym(pBASSHandle, "BASS_RecordGetInputName"));
SET_TO(BASS_RecordInit             , aml->GetSym(pBASSHandle, "BASS_RecordInit"));
SET_TO(BASS_RecordSetDevice        , aml->GetSym(pBASSHandle, "BASS_RecordSetDevice"));
SET_TO(BASS_RecordSetInput         , aml->GetSym(pBASSHandle, "BASS_RecordSetInput"));
SET_TO(BASS_RecordStart            , aml->GetSym(pBASSHandle, "BASS_RecordStart"));*/
SET_TO(BASS_SampleCreate           , aml->GetSym(pBASSHandle, "BASS_SampleCreate"));
SET_TO(BASS_SampleFree             , aml->GetSym(pBASSHandle, "BASS_SampleFree"));
SET_TO(BASS_SampleGetChannel       , aml->GetSym(pBASSHandle, "BASS_SampleGetChannel"));
SET_TO(BASS_SampleGetChannels      , aml->GetSym(pBASSHandle, "BASS_SampleGetChannels"));
SET_TO(BASS_SampleGetData          , aml->GetSym(pBASSHandle, "BASS_SampleGetData"));
SET_TO(BASS_SampleGetInfo          , aml->GetSym(pBASSHandle, "BASS_SampleGetInfo"));
SET_TO(BASS_SampleLoad             , aml->GetSym(pBASSHandle, "BASS_SampleLoad"));
SET_TO(BASS_SampleSetData          , aml->GetSym(pBASSHandle, "BASS_SampleSetData"));
SET_TO(BASS_SampleSetInfo          , aml->GetSym(pBASSHandle, "BASS_SampleSetInfo"));
SET_TO(BASS_SampleStop             , aml->GetSym(pBASSHandle, "BASS_SampleStop"));
SET_TO(BASS_Set3DFactors           , aml->GetSym(pBASSHandle, "BASS_Set3DFactors"));
SET_TO(BASS_Set3DPosition          , aml->GetSym(pBASSHandle, "BASS_Set3DPosition"));
SET_TO(BASS_SetConfig              , aml->GetSym(pBASSHandle, "BASS_SetConfig"));
SET_TO(BASS_SetConfigPtr           , aml->GetSym(pBASSHandle, "BASS_SetConfigPtr"));
SET_TO(BASS_SetDevice              , aml->GetSym(pBASSHandle, "BASS_SetDevice"));
SET_TO(BASS_SetVolume              , aml->GetSym(pBASSHandle, "BASS_SetVolume"));
SET_TO(BASS_Start                  , aml->GetSym(pBASSHandle, "BASS_Start"));
SET_TO(BASS_Stop                   , aml->GetSym(pBASSHandle, "BASS_Stop"));
SET_TO(BASS_StreamCreate           , aml->GetSym(pBASSHandle, "BASS_StreamCreate"));
SET_TO(BASS_StreamCreateFile       , aml->GetSym(pBASSHandle, "BASS_StreamCreateFile"));
SET_TO(BASS_StreamCreateURL        , aml->GetSym(pBASSHandle, "BASS_StreamCreateURL"));
SET_TO(BASS_StreamFree             , aml->GetSym(pBASSHandle, "BASS_StreamFree"));
SET_TO(BASS_StreamGetFilePosition  , aml->GetSym(pBASSHandle, "BASS_StreamGetFilePosition"));
SET_TO(BASS_StreamPutData          , aml->GetSym(pBASSHandle, "BASS_StreamPutData"));
SET_TO(BASS_StreamPutFileData      , aml->GetSym(pBASSHandle, "BASS_StreamPutFileData"));
SET_TO(BASS_Update                 , aml->GetSym(pBASSHandle, "BASS_Update"));